!function (e, t, n, a) { var l = "table2excel", i = { exclude: ".noExl", name: "Table2Excel" }; function o(t, n) { this.element = t, this.settings = e.extend({}, i, n), this._defaults = i, this._name = l, this.init() } function s(e) { return e.filename ? e.filename : "table2excel" } o.prototype = { init: function () { var t = this; t.template = { head: '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><meta http-equiv="content-type" content="application/vnd.ms-excel; charset=UTF-8"><head>\x3c!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets>', sheet: { head: "<x:ExcelWorksheet><x:Name>", tail: "</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet>" }, mid: "</x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--\x3e</head><body>", table: { head: "<table>", tail: "</table>" }, foot: "</body></html>" }, t.tableRows = [], e(t.element).each(function (n, a) { var l, i, o = ""; e(a).find("tr").not(t.settings.exclude).each(function (n, a) { o += "<tr>", e(a).find("td,th").not(t.settings.exclude).each(function (n, a) { if (e(a).find(t.settings.exclude).length >= 1) o += "<td> </td>"; else { if (0 == (l = e(a).find("select").each(function (t, n) { o += "<td>" + e(n).val() + "</td>" })).length) var l = e(a).find("input").each(function (t, n) { o += "<td>" + e(n).val() + "</td>" }); 0 == l.length && (o += "<td>" + e(a).html() + "</td>") } }), o += "</tr>" }), t.settings.exclude_img && (l = /(\s+alt\s*=\s*"([^"]*)"|\s+alt\s*=\s*'([^']*)')/i, o = o.replace(/<img[^>]*>/gi, function (e) { var t = l.exec(e); return null !== t && t.length >= 2 ? t[2] : "" })), t.settings.exclude_links && (o = o.replace(/<a[^>]*>|<\/a>/gi, "")), t.settings.exclude_inputs && (i = /(\s+value\s*=\s*"([^"]*)"|\s+value\s*=\s*'([^']*)')/i, o = o.replace(/<input[^>]*>|<\/input>/gi, function (e) { var t = i.exec(e); return null !== t && t.length >= 2 ? t[2] : "" })), t.tableRows.push(o) }), t.tableToExcel(t.tableRows, t.settings.name, t.settings.sheetName) }, tableToExcel: function (a, l, i) { var o, c, r, d = this, m = ""; if (d.format = function (e, t) { return e.replace(/{(\w+)}/g, function (e, n) { return t[n] }) }, i = void 0 === i ? "Sheet" : i, d.ctx = { worksheet: l || "Worksheet", table: a, sheetName: i }, m = d.template.head, e.isArray(a)) for (o in a) m += d.template.sheet.head + i + o + d.template.sheet.tail; if (m += d.template.mid, e.isArray(a)) for (o in a) m += d.template.table.head + "{table" + o + "}" + d.template.table.tail; for (o in m += d.template.foot, a) d.ctx["table" + o] = a[o]; if (delete d.ctx.table, !!n.documentMode) if ("undefined" != typeof Blob) { m = [m = d.format(m, d.ctx)]; var h = new Blob(m, { type: "text/html" }); t.navigator.msSaveBlob(h, s(d.settings)) } else txtArea1.document.open("text/html", "replace"), txtArea1.document.write(d.format(m, d.ctx)), txtArea1.document.close(), txtArea1.focus(), sa = txtArea1.document.execCommand("SaveAs", !0, s(d.settings)); else { var x = new Blob([d.format(m, d.ctx)], { type: "application/vnd.ms-excel" }); t.URL = t.URL || t.webkitURL, c = t.URL.createObjectURL(x), (r = n.createElement("a")).download = s(d.settings), r.href = c, n.body.appendChild(r), r.click(), n.body.removeChild(r) } return !0 } }, e.fn[l] = function (t) { var n = this; return n.each(function () { e.data(n, "plugin_" + l) || e.data(n, "plugin_" + l, new o(this, t)) }), n } }(jQuery, window, document);
